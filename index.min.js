import{useEffect as t,useState as r}from"react";function o(r,o=[]){t(()=>{const t=new AbortController,e=t.signal;return Promise.resolve(r(e,...o)).then(async t=>{t&&"function"==typeof t&&(e.aborted&&t(),e.addEventListener("abort",t))}).catch(t=>{if("AbortError"===t.name)return null;throw t}),()=>{e.aborted||t.abort()}},o)}function e(t,e=[]){const[n,a]=r([void 0,"LOADING"]);return o(async r=>{a(t=>"LOADING"===t[1]?t:[t[0],"LOADING"]);try{const o=await t(r,...e);if(r.aborted)return;a([o,"READY"])}catch(t){if(r.aborted)return;a([t,"ERROR"])}},e),n}export default o;export{e as useAsyncData,o as useAsyncEffect};
