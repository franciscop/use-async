import{useEffect as t,useState as r}from"react";function o(r,o=[]){t(()=>{const t=new AbortController,o=t.signal;return Promise.resolve(r(o)).then(async t=>{t&&"function"==typeof t&&(o.aborted&&t(),o.addEventListener("abort",t))}).catch(t=>{console.log(t)}),()=>{o.aborted||t.abort()}},o)}function n(t,n=[]){const[e,a]=r([null,"LOADING"]);return o(async r=>{a(t=>"LOADING"===t[1]?t:[t[0],"LOADING"]);try{const o=await t(r,...n);if(r.aborted)return;a([o,"READY"])}catch(t){if(r.aborted)return;a([t,"ERROR"])}},n),e}export{n as useAsyncData,o as useAsyncEffect};
