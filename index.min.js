import{useEffect as r,useState as t}from"react";function n(t,n=[]){r(()=>{const r=new AbortController,n=r.signal;return Promise.resolve(t(n)).then(async r=>{r&&"function"==typeof r&&(n.aborted&&r(),n.addEventListener("abort",r))}).catch(r=>{if("AbortError"===r.name)return null;throw r}),()=>{n.aborted||r.abort()}},n)}function o(r,o=[]){const[e,a]=t([null,"LOADING"]);return n(async t=>{a(r=>"LOADING"===r[1]?r:[r[0],"LOADING"]);try{const n=await r(t,...o);if(t.aborted)return;a([n,"READY"])}catch(r){if(t.aborted)return;a([r,"ERROR"])}},o),e}export{o as useAsyncData,n as useAsyncEffect};
