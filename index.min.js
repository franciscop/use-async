import{useEffect as r,useState as t}from"react";function o(t,o=[]){r(()=>{const r=new AbortController,n=r.signal;return Promise.resolve(t(n,...o)).then(async r=>{r&&"function"==typeof r&&(n.aborted&&r(),n.addEventListener("abort",r))}).catch(r=>{if("AbortError"===r.name)return null;throw r}),()=>{n.aborted||r.abort()}},o)}function n(r,n=[]){const[e,a]=t([void 0,"LOADING"]);return o(async t=>{a(r=>"LOADING"===r[1]?r:[r[0],"LOADING"]);try{const o=await r(t,...n);if(t.aborted)return;a([o,"READY"])}catch(r){if(t.aborted)return;a([r,"ERROR"])}},n),e}export{n as useAsyncData,o as useAsyncEffect};
